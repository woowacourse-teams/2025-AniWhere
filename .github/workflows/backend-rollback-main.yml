name: YaguBogu Backend Rollback Main

on:
  workflow_dispatch:
    inputs:
      version:
        description: '롤백할 SemVer (예: 1.0.1)'
        required: true
        type: string

env:
  IMAGE: yagubogu/yagubogu-backend

jobs:
  rollback:
    runs-on: [ self-hosted, production ]
    steps:
      - name: Ensure main branch
        shell: bash
        run: |
          CURRENT_BRANCH="${GITHUB_REF#refs/heads/}"
          if [ "$CURRENT_BRANCH" != "main" ]; then
            echo "This workflow can only run on main branch."
            exit 1
          fi
      - name: Login to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_DEPLOY_USERNAME }}
          password: ${{ secrets.DOCKERHUB_DEPLOY_TOKEN }}

      - id: digest
        name: Resolve digest for input version
        shell: bash
        run: |
          set -euo pipefail
          INPUT='${{ github.event.inputs.version }}'

          # v 접두사 정규화
          if [[ "$INPUT" =~ ^v ]]; then
            V="$INPUT"
            P="${INPUT#v}"
          else
            P="$INPUT"
            V="v$INPUT"
          fi

          LOG="/var/log/yagubogu/deployments.log"

          # 1) 운영 로그에서 다이제스트 우선 검색 (최근 행 우선)
          DIGEST=""
          if sudo test -f "$LOG"; then
            # release/alias/전달 포맷 모두 수용
            DIGEST="$(sudo tac "$LOG" | awk -v v="$V" -v p="$P" '
              tolower($0) ~ ("release=" v) || tolower($0) ~ ("version=" p) {
                for (i=1; i<=NF; i++) if ($i ~ /^digest=/) { sub(/^digest=/,"",$i); print $i; exit }
              }')"
          fi

          # 2) 로그에 없으면 레지스트리 태그 조회 (vX.Y.Z 우선, 실패 시 X.Y.Z도 시도)
          if [ -z "${DIGEST:-}" ]; then
            for TAG in "$V" "$P"; do
              if docker buildx imagetools inspect "$IMAGE:$TAG" >/dev/null 2>&1; then
                DIGEST="$(docker buildx imagetools inspect "$IMAGE:$TAG" \
                  | sed -n 's/^Digest:[[:space:]]*//p' | head -n1)"
                [ -n "$DIGEST" ] && break
              fi
            done
          fi

          [ -n "${DIGEST:-}" ] || { echo "해당 버전의 다이제스트를 찾을 수 없음: $INPUT" >&2; exit 1; }
          echo "digest=$DIGEST" >> "$GITHUB_OUTPUT"
          echo "VER=$V" >> "$GITHUB_OUTPUT"
          echo "Resolved digest: $DIGEST (input=$INPUT)"

      - name: Pull image
        run: docker pull $IMAGE@${{ steps.digest.outputs.digest }}

      - name: Blue-Green switch to target (pinned)
        shell: bash
        run: |
          set -euo pipefail
          DIGEST='${{ steps.digest.outputs.digest }}'
          VER='${{ github.event.inputs.version }}'
          BLUE="yagubogu-backend-blue"
          GREEN="yagubogu-backend-green"

          if docker ps --format '{{.Names}}' | grep -qx "$BLUE"; then
            ACTIVE="$BLUE"; INACTIVE="$GREEN"; PORT=8082; COLOR=green
          else
            ACTIVE="$GREEN"; INACTIVE="$BLUE"; PORT=8081; COLOR=blue
          fi

          if docker ps -a --format '{{.Names}}' | grep -qx "$INACTIVE"; then
            docker rm -f "$INACTIVE" || true
          fi

          docker run -d \
            --name "$INACTIVE" \
            --network yagubogu-net \
            -p "$PORT:8080" \
            --stop-signal=SIGTERM \
            --stop-timeout=30 \
            -v /var/log/yagubogu:/var/log/yagubogu \
            -e SPRING_PROFILES_ACTIVE=prod \
            -e DB_URL="${{ secrets.DB_PROD_URL }}" \
            -e DB_USERNAME="${{ secrets.DB_USERNAME }}" \
            -e DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
            -e GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}" \
            -e ACCESS_TOKEN_SECRET_KEY="${{ secrets.ACCESS_TOKEN_SECRET_KEY }}" \
            -e REFRESH_TOKEN_SECRET_KEY="${{ secrets.REFRESH_TOKEN_SECRET_KEY }}" \
            -l app=yagubogu-backend \
            -l release.version="$VER" \
            -l release.digest="$DIGEST" \
            "$IMAGE@$DIGEST"

          for i in {1..30}; do
            if curl -fsS "http://127.0.0.1:$PORT/actuator/health" >/dev/null; then
              echo "healthy"; break; fi
            echo "waiting ($i/30)"; sleep 2
          done

          if [ "$COLOR" = "blue" ]; then
            TARGET="/etc/nginx/sites-available/yagubogu-blue.conf"
          else
            TARGET="/etc/nginx/sites-available/yagubogu-green.conf"
          fi
          sudo ln -sf "$TARGET" /etc/nginx/sites-enabled/app.conf
          sudo nginx -t
          sudo nginx -s reload

          sleep 15

          if [ -n "${ACTIVE:-}" ] && docker ps --format '{{.Names}}' | grep -qx "$ACTIVE"; then
            docker stop --time=30 "$ACTIVE" || true
          fi

          echo "$(date -Is) ROLLBACK release=$VER digest=$DIGEST color=$COLOR port=$PORT" \
            | sudo tee -a /var/log/yagubogu/deployments.log
